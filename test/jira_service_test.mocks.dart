// Mocks generated by Mockito 5.4.6 from annotations
// in taskmanager/test/jira_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i6;
import 'dart:io' as _i2;
import 'dart:typed_data' as _i7;

import 'package:atlassian_apis/src/generated/jira_platform.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDirectory_1 extends _i1.SmartFake implements _i2.Directory {
  _FakeDirectory_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileSystemEntity_2 extends _i1.SmartFake
    implements _i2.FileSystemEntity {
  _FakeFileSystemEntity_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileStat_3 extends _i1.SmartFake implements _i2.FileStat {
  _FakeFileStat_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFile_4 extends _i1.SmartFake implements _i2.File {
  _FakeFile_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_5 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRandomAccessFile_6 extends _i1.SmartFake
    implements _i2.RandomAccessFile {
  _FakeRandomAccessFile_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSink_7 extends _i1.SmartFake implements _i2.IOSink {
  _FakeIOSink_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAnnouncementBannerApi_8 extends _i1.SmartFake
    implements _i3.AnnouncementBannerApi {
  _FakeAnnouncementBannerApi_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppMigrationApi_9 extends _i1.SmartFake
    implements _i3.AppMigrationApi {
  _FakeAppMigrationApi_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppPropertiesApi_10 extends _i1.SmartFake
    implements _i3.AppPropertiesApi {
  _FakeAppPropertiesApi_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeApplicationRolesApi_11 extends _i1.SmartFake
    implements _i3.ApplicationRolesApi {
  _FakeApplicationRolesApi_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuditRecordsApi_12 extends _i1.SmartFake
    implements _i3.AuditRecordsApi {
  _FakeAuditRecordsApi_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAvatarsApi_13 extends _i1.SmartFake implements _i3.AvatarsApi {
  _FakeAvatarsApi_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDashboardsApi_14 extends _i1.SmartFake implements _i3.DashboardsApi {
  _FakeDashboardsApi_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDynamicModulesApi_15 extends _i1.SmartFake
    implements _i3.DynamicModulesApi {
  _FakeDynamicModulesApi_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFilterSharingApi_16 extends _i1.SmartFake
    implements _i3.FilterSharingApi {
  _FakeFilterSharingApi_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFiltersApi_17 extends _i1.SmartFake implements _i3.FiltersApi {
  _FakeFiltersApi_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGroupAndUserPickerApi_18 extends _i1.SmartFake
    implements _i3.GroupAndUserPickerApi {
  _FakeGroupAndUserPickerApi_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGroupsApi_19 extends _i1.SmartFake implements _i3.GroupsApi {
  _FakeGroupsApi_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueAttachmentsApi_20 extends _i1.SmartFake
    implements _i3.IssueAttachmentsApi {
  _FakeIssueAttachmentsApi_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueCommentPropertiesApi_21 extends _i1.SmartFake
    implements _i3.IssueCommentPropertiesApi {
  _FakeIssueCommentPropertiesApi_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueCommentsApi_22 extends _i1.SmartFake
    implements _i3.IssueCommentsApi {
  _FakeIssueCommentsApi_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueCustomFieldConfigurationAppsApi_23 extends _i1.SmartFake
    implements _i3.IssueCustomFieldConfigurationAppsApi {
  _FakeIssueCustomFieldConfigurationAppsApi_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssueCustomFieldContextsApi_24 extends _i1.SmartFake
    implements _i3.IssueCustomFieldContextsApi {
  _FakeIssueCustomFieldContextsApi_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssueCustomFieldOptionsApi_25 extends _i1.SmartFake
    implements _i3.IssueCustomFieldOptionsApi {
  _FakeIssueCustomFieldOptionsApi_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueCustomFieldOptionsAppsApi_26 extends _i1.SmartFake
    implements _i3.IssueCustomFieldOptionsAppsApi {
  _FakeIssueCustomFieldOptionsAppsApi_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssueCustomFieldValuesAppsApi_27 extends _i1.SmartFake
    implements _i3.IssueCustomFieldValuesAppsApi {
  _FakeIssueCustomFieldValuesAppsApi_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssueFieldConfigurationsApi_28 extends _i1.SmartFake
    implements _i3.IssueFieldConfigurationsApi {
  _FakeIssueFieldConfigurationsApi_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssueFieldsApi_29 extends _i1.SmartFake
    implements _i3.IssueFieldsApi {
  _FakeIssueFieldsApi_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueLinkTypesApi_30 extends _i1.SmartFake
    implements _i3.IssueLinkTypesApi {
  _FakeIssueLinkTypesApi_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueLinksApi_31 extends _i1.SmartFake implements _i3.IssueLinksApi {
  _FakeIssueLinksApi_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueNavigatorSettingsApi_32 extends _i1.SmartFake
    implements _i3.IssueNavigatorSettingsApi {
  _FakeIssueNavigatorSettingsApi_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueNotificationSchemesApi_33 extends _i1.SmartFake
    implements _i3.IssueNotificationSchemesApi {
  _FakeIssueNotificationSchemesApi_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeIssuePrioritiesApi_34 extends _i1.SmartFake
    implements _i3.IssuePrioritiesApi {
  _FakeIssuePrioritiesApi_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssuePropertiesApi_35 extends _i1.SmartFake
    implements _i3.IssuePropertiesApi {
  _FakeIssuePropertiesApi_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueRemoteLinksApi_36 extends _i1.SmartFake
    implements _i3.IssueRemoteLinksApi {
  _FakeIssueRemoteLinksApi_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueResolutionsApi_37 extends _i1.SmartFake
    implements _i3.IssueResolutionsApi {
  _FakeIssueResolutionsApi_37(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueSearchApi_38 extends _i1.SmartFake
    implements _i3.IssueSearchApi {
  _FakeIssueSearchApi_38(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueSecurityLevelApi_39 extends _i1.SmartFake
    implements _i3.IssueSecurityLevelApi {
  _FakeIssueSecurityLevelApi_39(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueSecuritySchemesApi_40 extends _i1.SmartFake
    implements _i3.IssueSecuritySchemesApi {
  _FakeIssueSecuritySchemesApi_40(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueTypePropertiesApi_41 extends _i1.SmartFake
    implements _i3.IssueTypePropertiesApi {
  _FakeIssueTypePropertiesApi_41(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueTypeSchemesApi_42 extends _i1.SmartFake
    implements _i3.IssueTypeSchemesApi {
  _FakeIssueTypeSchemesApi_42(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueTypeScreenSchemesApi_43 extends _i1.SmartFake
    implements _i3.IssueTypeScreenSchemesApi {
  _FakeIssueTypeScreenSchemesApi_43(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueTypesApi_44 extends _i1.SmartFake implements _i3.IssueTypesApi {
  _FakeIssueTypesApi_44(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueVotesApi_45 extends _i1.SmartFake implements _i3.IssueVotesApi {
  _FakeIssueVotesApi_45(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueWatchersApi_46 extends _i1.SmartFake
    implements _i3.IssueWatchersApi {
  _FakeIssueWatchersApi_46(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueWorklogPropertiesApi_47 extends _i1.SmartFake
    implements _i3.IssueWorklogPropertiesApi {
  _FakeIssueWorklogPropertiesApi_47(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueWorklogsApi_48 extends _i1.SmartFake
    implements _i3.IssueWorklogsApi {
  _FakeIssueWorklogsApi_48(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssuesApi_49 extends _i1.SmartFake implements _i3.IssuesApi {
  _FakeIssuesApi_49(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJQLApi_50 extends _i1.SmartFake implements _i3.JQLApi {
  _FakeJQLApi_50(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJQLFunctionsAppsApi_51 extends _i1.SmartFake
    implements _i3.JQLFunctionsAppsApi {
  _FakeJQLFunctionsAppsApi_51(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJiraExpressionsApi_52 extends _i1.SmartFake
    implements _i3.JiraExpressionsApi {
  _FakeJiraExpressionsApi_52(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJiraSettingsApi_53 extends _i1.SmartFake
    implements _i3.JiraSettingsApi {
  _FakeJiraSettingsApi_53(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLabelsApi_54 extends _i1.SmartFake implements _i3.LabelsApi {
  _FakeLabelsApi_54(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLicenseMetricsApi_55 extends _i1.SmartFake
    implements _i3.LicenseMetricsApi {
  _FakeLicenseMetricsApi_55(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMyselfApi_56 extends _i1.SmartFake implements _i3.MyselfApi {
  _FakeMyselfApi_56(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePermissionSchemesApi_57 extends _i1.SmartFake
    implements _i3.PermissionSchemesApi {
  _FakePermissionSchemesApi_57(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePermissionsApi_58 extends _i1.SmartFake
    implements _i3.PermissionsApi {
  _FakePermissionsApi_58(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectAvatarsApi_59 extends _i1.SmartFake
    implements _i3.ProjectAvatarsApi {
  _FakeProjectAvatarsApi_59(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectCategoriesApi_60 extends _i1.SmartFake
    implements _i3.ProjectCategoriesApi {
  _FakeProjectCategoriesApi_60(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectComponentsApi_61 extends _i1.SmartFake
    implements _i3.ProjectComponentsApi {
  _FakeProjectComponentsApi_61(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectEmailApi_62 extends _i1.SmartFake
    implements _i3.ProjectEmailApi {
  _FakeProjectEmailApi_62(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectFeaturesApi_63 extends _i1.SmartFake
    implements _i3.ProjectFeaturesApi {
  _FakeProjectFeaturesApi_63(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectKeyAndNameValidationApi_64 extends _i1.SmartFake
    implements _i3.ProjectKeyAndNameValidationApi {
  _FakeProjectKeyAndNameValidationApi_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeProjectPermissionSchemesApi_65 extends _i1.SmartFake
    implements _i3.ProjectPermissionSchemesApi {
  _FakeProjectPermissionSchemesApi_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeProjectPropertiesApi_66 extends _i1.SmartFake
    implements _i3.ProjectPropertiesApi {
  _FakeProjectPropertiesApi_66(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectRoleActorsApi_67 extends _i1.SmartFake
    implements _i3.ProjectRoleActorsApi {
  _FakeProjectRoleActorsApi_67(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectRolesApi_68 extends _i1.SmartFake
    implements _i3.ProjectRolesApi {
  _FakeProjectRolesApi_68(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectTypesApi_69 extends _i1.SmartFake
    implements _i3.ProjectTypesApi {
  _FakeProjectTypesApi_69(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectVersionsApi_70 extends _i1.SmartFake
    implements _i3.ProjectVersionsApi {
  _FakeProjectVersionsApi_70(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProjectsApi_71 extends _i1.SmartFake implements _i3.ProjectsApi {
  _FakeProjectsApi_71(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScreenSchemesApi_72 extends _i1.SmartFake
    implements _i3.ScreenSchemesApi {
  _FakeScreenSchemesApi_72(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScreenTabFieldsApi_73 extends _i1.SmartFake
    implements _i3.ScreenTabFieldsApi {
  _FakeScreenTabFieldsApi_73(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScreenTabsApi_74 extends _i1.SmartFake implements _i3.ScreenTabsApi {
  _FakeScreenTabsApi_74(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScreensApi_75 extends _i1.SmartFake implements _i3.ScreensApi {
  _FakeScreensApi_75(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeServerInfoApi_76 extends _i1.SmartFake implements _i3.ServerInfoApi {
  _FakeServerInfoApi_76(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStatusApi_77 extends _i1.SmartFake implements _i3.StatusApi {
  _FakeStatusApi_77(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTasksApi_78 extends _i1.SmartFake implements _i3.TasksApi {
  _FakeTasksApi_78(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTimeTrackingApi_79 extends _i1.SmartFake
    implements _i3.TimeTrackingApi {
  _FakeTimeTrackingApi_79(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUIModificationsAppsApi_80 extends _i1.SmartFake
    implements _i3.UIModificationsAppsApi {
  _FakeUIModificationsAppsApi_80(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserPropertiesApi_81 extends _i1.SmartFake
    implements _i3.UserPropertiesApi {
  _FakeUserPropertiesApi_81(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserSearchApi_82 extends _i1.SmartFake implements _i3.UserSearchApi {
  _FakeUserSearchApi_82(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUsersApi_83 extends _i1.SmartFake implements _i3.UsersApi {
  _FakeUsersApi_83(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebhooksApi_84 extends _i1.SmartFake implements _i3.WebhooksApi {
  _FakeWebhooksApi_84(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkflowSchemeDraftsApi_85 extends _i1.SmartFake
    implements _i3.WorkflowSchemeDraftsApi {
  _FakeWorkflowSchemeDraftsApi_85(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkflowSchemeProjectAssociationsApi_86 extends _i1.SmartFake
    implements _i3.WorkflowSchemeProjectAssociationsApi {
  _FakeWorkflowSchemeProjectAssociationsApi_86(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeWorkflowSchemesApi_87 extends _i1.SmartFake
    implements _i3.WorkflowSchemesApi {
  _FakeWorkflowSchemesApi_87(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkflowStatusCategoriesApi_88 extends _i1.SmartFake
    implements _i3.WorkflowStatusCategoriesApi {
  _FakeWorkflowStatusCategoriesApi_88(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeWorkflowStatusesApi_89 extends _i1.SmartFake
    implements _i3.WorkflowStatusesApi {
  _FakeWorkflowStatusesApi_89(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkflowTransitionPropertiesApi_90 extends _i1.SmartFake
    implements _i3.WorkflowTransitionPropertiesApi {
  _FakeWorkflowTransitionPropertiesApi_90(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeWorkflowTransitionRulesApi_91 extends _i1.SmartFake
    implements _i3.WorkflowTransitionRulesApi {
  _FakeWorkflowTransitionRulesApi_91(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWorkflowsApi_92 extends _i1.SmartFake implements _i3.WorkflowsApi {
  _FakeWorkflowsApi_92(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssuePickerSuggestions_93 extends _i1.SmartFake
    implements _i3.IssuePickerSuggestions {
  _FakeIssuePickerSuggestions_93(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueMatches_94 extends _i1.SmartFake implements _i3.IssueMatches {
  _FakeIssueMatches_94(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchResults_95 extends _i1.SmartFake implements _i3.SearchResults {
  _FakeSearchResults_95(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocale_96 extends _i1.SmartFake implements _i3.Locale {
  _FakeLocale_96(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_97 extends _i1.SmartFake implements _i3.User {
  _FakeUser_97(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIssueBean_98 extends _i1.SmartFake implements _i3.IssueBean {
  _FakeIssueBean_98(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Directory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectory extends _i1.Mock implements _i2.Directory {
  MockDirectory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#path)),
          )
          as String);

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_0(this, Invocation.getter(#uri)),
          )
          as Uri);

  @override
  _i2.Directory get absolute =>
      (super.noSuchMethod(
            Invocation.getter(#absolute),
            returnValue: _FakeDirectory_1(this, Invocation.getter(#absolute)),
          )
          as _i2.Directory);

  @override
  bool get isAbsolute =>
      (super.noSuchMethod(Invocation.getter(#isAbsolute), returnValue: false)
          as bool);

  @override
  _i2.Directory get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeDirectory_1(this, Invocation.getter(#parent)),
          )
          as _i2.Directory);

  @override
  _i5.Future<_i2.Directory> create({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {#recursive: recursive}),
            returnValue: _i5.Future<_i2.Directory>.value(
              _FakeDirectory_1(
                this,
                Invocation.method(#create, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i5.Future<_i2.Directory>);

  @override
  void createSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#createSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i2.Directory> createTemp([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTemp, [prefix]),
            returnValue: _i5.Future<_i2.Directory>.value(
              _FakeDirectory_1(this, Invocation.method(#createTemp, [prefix])),
            ),
          )
          as _i5.Future<_i2.Directory>);

  @override
  _i2.Directory createTempSync([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTempSync, [prefix]),
            returnValue: _FakeDirectory_1(
              this,
              Invocation.method(#createTempSync, [prefix]),
            ),
          )
          as _i2.Directory);

  @override
  _i5.Future<String> resolveSymbolicLinks() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinks, []),
            returnValue: _i5.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#resolveSymbolicLinks, []),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  String resolveSymbolicLinksSync() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinksSync, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#resolveSymbolicLinksSync, []),
            ),
          )
          as String);

  @override
  _i5.Future<_i2.Directory> rename(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#rename, [newPath]),
            returnValue: _i5.Future<_i2.Directory>.value(
              _FakeDirectory_1(this, Invocation.method(#rename, [newPath])),
            ),
          )
          as _i5.Future<_i2.Directory>);

  @override
  _i2.Directory renameSync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#renameSync, [newPath]),
            returnValue: _FakeDirectory_1(
              this,
              Invocation.method(#renameSync, [newPath]),
            ),
          )
          as _i2.Directory);

  @override
  _i5.Future<_i2.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#recursive: recursive}),
            returnValue: _i5.Future<_i2.FileSystemEntity>.value(
              _FakeFileSystemEntity_2(
                this,
                Invocation.method(#delete, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i5.Future<_i2.FileSystemEntity>);

  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#deleteSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Stream<_i2.FileSystemEntity> list({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: _i5.Stream<_i2.FileSystemEntity>.empty(),
          )
          as _i5.Stream<_i2.FileSystemEntity>);

  @override
  List<_i2.FileSystemEntity> listSync({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listSync, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: <_i2.FileSystemEntity>[],
          )
          as List<_i2.FileSystemEntity>);

  @override
  _i5.Future<bool> exists() =>
      (super.noSuchMethod(
            Invocation.method(#exists, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  bool existsSync() =>
      (super.noSuchMethod(
            Invocation.method(#existsSync, []),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<_i2.FileStat> stat() =>
      (super.noSuchMethod(
            Invocation.method(#stat, []),
            returnValue: _i5.Future<_i2.FileStat>.value(
              _FakeFileStat_3(this, Invocation.method(#stat, [])),
            ),
          )
          as _i5.Future<_i2.FileStat>);

  @override
  _i2.FileStat statSync() =>
      (super.noSuchMethod(
            Invocation.method(#statSync, []),
            returnValue: _FakeFileStat_3(
              this,
              Invocation.method(#statSync, []),
            ),
          )
          as _i2.FileStat);

  @override
  _i5.Stream<_i2.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watch, [], {
              #events: events,
              #recursive: recursive,
            }),
            returnValue: _i5.Stream<_i2.FileSystemEvent>.empty(),
          )
          as _i5.Stream<_i2.FileSystemEvent>);
}

/// A class which mocks [File].
///
/// See the documentation for Mockito's code generation for more information.
class MockFile extends _i1.Mock implements _i2.File {
  MockFile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.File get absolute =>
      (super.noSuchMethod(
            Invocation.getter(#absolute),
            returnValue: _FakeFile_4(this, Invocation.getter(#absolute)),
          )
          as _i2.File);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i4.dummyValue<String>(this, Invocation.getter(#path)),
          )
          as String);

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_0(this, Invocation.getter(#uri)),
          )
          as Uri);

  @override
  bool get isAbsolute =>
      (super.noSuchMethod(Invocation.getter(#isAbsolute), returnValue: false)
          as bool);

  @override
  _i2.Directory get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeDirectory_1(this, Invocation.getter(#parent)),
          )
          as _i2.Directory);

  @override
  _i5.Future<_i2.File> create({
    bool? recursive = false,
    bool? exclusive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #recursive: recursive,
              #exclusive: exclusive,
            }),
            returnValue: _i5.Future<_i2.File>.value(
              _FakeFile_4(
                this,
                Invocation.method(#create, [], {
                  #recursive: recursive,
                  #exclusive: exclusive,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.File>);

  @override
  void createSync({bool? recursive = false, bool? exclusive = false}) =>
      super.noSuchMethod(
        Invocation.method(#createSync, [], {
          #recursive: recursive,
          #exclusive: exclusive,
        }),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i2.File> rename(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#rename, [newPath]),
            returnValue: _i5.Future<_i2.File>.value(
              _FakeFile_4(this, Invocation.method(#rename, [newPath])),
            ),
          )
          as _i5.Future<_i2.File>);

  @override
  _i2.File renameSync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#renameSync, [newPath]),
            returnValue: _FakeFile_4(
              this,
              Invocation.method(#renameSync, [newPath]),
            ),
          )
          as _i2.File);

  @override
  _i5.Future<_i2.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#recursive: recursive}),
            returnValue: _i5.Future<_i2.FileSystemEntity>.value(
              _FakeFileSystemEntity_2(
                this,
                Invocation.method(#delete, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i5.Future<_i2.FileSystemEntity>);

  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#deleteSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i2.File> copy(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#copy, [newPath]),
            returnValue: _i5.Future<_i2.File>.value(
              _FakeFile_4(this, Invocation.method(#copy, [newPath])),
            ),
          )
          as _i5.Future<_i2.File>);

  @override
  _i2.File copySync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#copySync, [newPath]),
            returnValue: _FakeFile_4(
              this,
              Invocation.method(#copySync, [newPath]),
            ),
          )
          as _i2.File);

  @override
  _i5.Future<int> length() =>
      (super.noSuchMethod(
            Invocation.method(#length, []),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  int lengthSync() =>
      (super.noSuchMethod(Invocation.method(#lengthSync, []), returnValue: 0)
          as int);

  @override
  _i5.Future<DateTime> lastAccessed() =>
      (super.noSuchMethod(
            Invocation.method(#lastAccessed, []),
            returnValue: _i5.Future<DateTime>.value(
              _FakeDateTime_5(this, Invocation.method(#lastAccessed, [])),
            ),
          )
          as _i5.Future<DateTime>);

  @override
  DateTime lastAccessedSync() =>
      (super.noSuchMethod(
            Invocation.method(#lastAccessedSync, []),
            returnValue: _FakeDateTime_5(
              this,
              Invocation.method(#lastAccessedSync, []),
            ),
          )
          as DateTime);

  @override
  _i5.Future<dynamic> setLastAccessed(DateTime? time) =>
      (super.noSuchMethod(
            Invocation.method(#setLastAccessed, [time]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void setLastAccessedSync(DateTime? time) => super.noSuchMethod(
    Invocation.method(#setLastAccessedSync, [time]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<DateTime> lastModified() =>
      (super.noSuchMethod(
            Invocation.method(#lastModified, []),
            returnValue: _i5.Future<DateTime>.value(
              _FakeDateTime_5(this, Invocation.method(#lastModified, [])),
            ),
          )
          as _i5.Future<DateTime>);

  @override
  DateTime lastModifiedSync() =>
      (super.noSuchMethod(
            Invocation.method(#lastModifiedSync, []),
            returnValue: _FakeDateTime_5(
              this,
              Invocation.method(#lastModifiedSync, []),
            ),
          )
          as DateTime);

  @override
  _i5.Future<dynamic> setLastModified(DateTime? time) =>
      (super.noSuchMethod(
            Invocation.method(#setLastModified, [time]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void setLastModifiedSync(DateTime? time) => super.noSuchMethod(
    Invocation.method(#setLastModifiedSync, [time]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i2.RandomAccessFile> open({
    _i2.FileMode? mode = _i2.FileMode.read,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#open, [], {#mode: mode}),
            returnValue: _i5.Future<_i2.RandomAccessFile>.value(
              _FakeRandomAccessFile_6(
                this,
                Invocation.method(#open, [], {#mode: mode}),
              ),
            ),
          )
          as _i5.Future<_i2.RandomAccessFile>);

  @override
  _i2.RandomAccessFile openSync({_i2.FileMode? mode = _i2.FileMode.read}) =>
      (super.noSuchMethod(
            Invocation.method(#openSync, [], {#mode: mode}),
            returnValue: _FakeRandomAccessFile_6(
              this,
              Invocation.method(#openSync, [], {#mode: mode}),
            ),
          )
          as _i2.RandomAccessFile);

  @override
  _i5.Stream<List<int>> openRead([int? start, int? end]) =>
      (super.noSuchMethod(
            Invocation.method(#openRead, [start, end]),
            returnValue: _i5.Stream<List<int>>.empty(),
          )
          as _i5.Stream<List<int>>);

  @override
  _i2.IOSink openWrite({
    _i2.FileMode? mode = _i2.FileMode.write,
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#openWrite, [], {
              #mode: mode,
              #encoding: encoding,
            }),
            returnValue: _FakeIOSink_7(
              this,
              Invocation.method(#openWrite, [], {
                #mode: mode,
                #encoding: encoding,
              }),
            ),
          )
          as _i2.IOSink);

  @override
  _i5.Future<_i7.Uint8List> readAsBytes() =>
      (super.noSuchMethod(
            Invocation.method(#readAsBytes, []),
            returnValue: _i5.Future<_i7.Uint8List>.value(_i7.Uint8List(0)),
          )
          as _i5.Future<_i7.Uint8List>);

  @override
  _i7.Uint8List readAsBytesSync() =>
      (super.noSuchMethod(
            Invocation.method(#readAsBytesSync, []),
            returnValue: _i7.Uint8List(0),
          )
          as _i7.Uint8List);

  @override
  _i5.Future<String> readAsString({
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsString, [], {#encoding: encoding}),
            returnValue: _i5.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#readAsString, [], {#encoding: encoding}),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  String readAsStringSync({_i6.Encoding? encoding = const _i6.Utf8Codec()}) =>
      (super.noSuchMethod(
            Invocation.method(#readAsStringSync, [], {#encoding: encoding}),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#readAsStringSync, [], {#encoding: encoding}),
            ),
          )
          as String);

  @override
  _i5.Future<List<String>> readAsLines({
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsLines, [], {#encoding: encoding}),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  List<String> readAsLinesSync({
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAsLinesSync, [], {#encoding: encoding}),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i5.Future<_i2.File> writeAsBytes(
    List<int>? bytes, {
    _i2.FileMode? mode = _i2.FileMode.write,
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #writeAsBytes,
              [bytes],
              {#mode: mode, #flush: flush},
            ),
            returnValue: _i5.Future<_i2.File>.value(
              _FakeFile_4(
                this,
                Invocation.method(
                  #writeAsBytes,
                  [bytes],
                  {#mode: mode, #flush: flush},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.File>);

  @override
  void writeAsBytesSync(
    List<int>? bytes, {
    _i2.FileMode? mode = _i2.FileMode.write,
    bool? flush = false,
  }) => super.noSuchMethod(
    Invocation.method(#writeAsBytesSync, [bytes], {#mode: mode, #flush: flush}),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i2.File> writeAsString(
    String? contents, {
    _i2.FileMode? mode = _i2.FileMode.write,
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
    bool? flush = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #writeAsString,
              [contents],
              {#mode: mode, #encoding: encoding, #flush: flush},
            ),
            returnValue: _i5.Future<_i2.File>.value(
              _FakeFile_4(
                this,
                Invocation.method(
                  #writeAsString,
                  [contents],
                  {#mode: mode, #encoding: encoding, #flush: flush},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.File>);

  @override
  void writeAsStringSync(
    String? contents, {
    _i2.FileMode? mode = _i2.FileMode.write,
    _i6.Encoding? encoding = const _i6.Utf8Codec(),
    bool? flush = false,
  }) => super.noSuchMethod(
    Invocation.method(
      #writeAsStringSync,
      [contents],
      {#mode: mode, #encoding: encoding, #flush: flush},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<bool> exists() =>
      (super.noSuchMethod(
            Invocation.method(#exists, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  bool existsSync() =>
      (super.noSuchMethod(
            Invocation.method(#existsSync, []),
            returnValue: false,
          )
          as bool);

  @override
  _i5.Future<String> resolveSymbolicLinks() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinks, []),
            returnValue: _i5.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#resolveSymbolicLinks, []),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  String resolveSymbolicLinksSync() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinksSync, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#resolveSymbolicLinksSync, []),
            ),
          )
          as String);

  @override
  _i5.Future<_i2.FileStat> stat() =>
      (super.noSuchMethod(
            Invocation.method(#stat, []),
            returnValue: _i5.Future<_i2.FileStat>.value(
              _FakeFileStat_3(this, Invocation.method(#stat, [])),
            ),
          )
          as _i5.Future<_i2.FileStat>);

  @override
  _i2.FileStat statSync() =>
      (super.noSuchMethod(
            Invocation.method(#statSync, []),
            returnValue: _FakeFileStat_3(
              this,
              Invocation.method(#statSync, []),
            ),
          )
          as _i2.FileStat);

  @override
  _i5.Stream<_i2.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watch, [], {
              #events: events,
              #recursive: recursive,
            }),
            returnValue: _i5.Stream<_i2.FileSystemEvent>.empty(),
          )
          as _i5.Stream<_i2.FileSystemEvent>);
}

/// A class which mocks [JiraPlatformApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockJiraPlatformApi extends _i1.Mock implements _i3.JiraPlatformApi {
  MockJiraPlatformApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AnnouncementBannerApi get announcementBanner =>
      (super.noSuchMethod(
            Invocation.getter(#announcementBanner),
            returnValue: _FakeAnnouncementBannerApi_8(
              this,
              Invocation.getter(#announcementBanner),
            ),
          )
          as _i3.AnnouncementBannerApi);

  @override
  _i3.AppMigrationApi get appMigration =>
      (super.noSuchMethod(
            Invocation.getter(#appMigration),
            returnValue: _FakeAppMigrationApi_9(
              this,
              Invocation.getter(#appMigration),
            ),
          )
          as _i3.AppMigrationApi);

  @override
  _i3.AppPropertiesApi get appProperties =>
      (super.noSuchMethod(
            Invocation.getter(#appProperties),
            returnValue: _FakeAppPropertiesApi_10(
              this,
              Invocation.getter(#appProperties),
            ),
          )
          as _i3.AppPropertiesApi);

  @override
  _i3.ApplicationRolesApi get applicationRoles =>
      (super.noSuchMethod(
            Invocation.getter(#applicationRoles),
            returnValue: _FakeApplicationRolesApi_11(
              this,
              Invocation.getter(#applicationRoles),
            ),
          )
          as _i3.ApplicationRolesApi);

  @override
  _i3.AuditRecordsApi get auditRecords =>
      (super.noSuchMethod(
            Invocation.getter(#auditRecords),
            returnValue: _FakeAuditRecordsApi_12(
              this,
              Invocation.getter(#auditRecords),
            ),
          )
          as _i3.AuditRecordsApi);

  @override
  _i3.AvatarsApi get avatars =>
      (super.noSuchMethod(
            Invocation.getter(#avatars),
            returnValue: _FakeAvatarsApi_13(this, Invocation.getter(#avatars)),
          )
          as _i3.AvatarsApi);

  @override
  _i3.DashboardsApi get dashboards =>
      (super.noSuchMethod(
            Invocation.getter(#dashboards),
            returnValue: _FakeDashboardsApi_14(
              this,
              Invocation.getter(#dashboards),
            ),
          )
          as _i3.DashboardsApi);

  @override
  _i3.DynamicModulesApi get dynamicModules =>
      (super.noSuchMethod(
            Invocation.getter(#dynamicModules),
            returnValue: _FakeDynamicModulesApi_15(
              this,
              Invocation.getter(#dynamicModules),
            ),
          )
          as _i3.DynamicModulesApi);

  @override
  _i3.FilterSharingApi get filterSharing =>
      (super.noSuchMethod(
            Invocation.getter(#filterSharing),
            returnValue: _FakeFilterSharingApi_16(
              this,
              Invocation.getter(#filterSharing),
            ),
          )
          as _i3.FilterSharingApi);

  @override
  _i3.FiltersApi get filters =>
      (super.noSuchMethod(
            Invocation.getter(#filters),
            returnValue: _FakeFiltersApi_17(this, Invocation.getter(#filters)),
          )
          as _i3.FiltersApi);

  @override
  _i3.GroupAndUserPickerApi get groupAndUserPicker =>
      (super.noSuchMethod(
            Invocation.getter(#groupAndUserPicker),
            returnValue: _FakeGroupAndUserPickerApi_18(
              this,
              Invocation.getter(#groupAndUserPicker),
            ),
          )
          as _i3.GroupAndUserPickerApi);

  @override
  _i3.GroupsApi get groups =>
      (super.noSuchMethod(
            Invocation.getter(#groups),
            returnValue: _FakeGroupsApi_19(this, Invocation.getter(#groups)),
          )
          as _i3.GroupsApi);

  @override
  _i3.IssueAttachmentsApi get issueAttachments =>
      (super.noSuchMethod(
            Invocation.getter(#issueAttachments),
            returnValue: _FakeIssueAttachmentsApi_20(
              this,
              Invocation.getter(#issueAttachments),
            ),
          )
          as _i3.IssueAttachmentsApi);

  @override
  _i3.IssueCommentPropertiesApi get issueCommentProperties =>
      (super.noSuchMethod(
            Invocation.getter(#issueCommentProperties),
            returnValue: _FakeIssueCommentPropertiesApi_21(
              this,
              Invocation.getter(#issueCommentProperties),
            ),
          )
          as _i3.IssueCommentPropertiesApi);

  @override
  _i3.IssueCommentsApi get issueComments =>
      (super.noSuchMethod(
            Invocation.getter(#issueComments),
            returnValue: _FakeIssueCommentsApi_22(
              this,
              Invocation.getter(#issueComments),
            ),
          )
          as _i3.IssueCommentsApi);

  @override
  _i3.IssueCustomFieldConfigurationAppsApi
  get issueCustomFieldConfigurationApps =>
      (super.noSuchMethod(
            Invocation.getter(#issueCustomFieldConfigurationApps),
            returnValue: _FakeIssueCustomFieldConfigurationAppsApi_23(
              this,
              Invocation.getter(#issueCustomFieldConfigurationApps),
            ),
          )
          as _i3.IssueCustomFieldConfigurationAppsApi);

  @override
  _i3.IssueCustomFieldContextsApi get issueCustomFieldContexts =>
      (super.noSuchMethod(
            Invocation.getter(#issueCustomFieldContexts),
            returnValue: _FakeIssueCustomFieldContextsApi_24(
              this,
              Invocation.getter(#issueCustomFieldContexts),
            ),
          )
          as _i3.IssueCustomFieldContextsApi);

  @override
  _i3.IssueCustomFieldOptionsApi get issueCustomFieldOptions =>
      (super.noSuchMethod(
            Invocation.getter(#issueCustomFieldOptions),
            returnValue: _FakeIssueCustomFieldOptionsApi_25(
              this,
              Invocation.getter(#issueCustomFieldOptions),
            ),
          )
          as _i3.IssueCustomFieldOptionsApi);

  @override
  _i3.IssueCustomFieldOptionsAppsApi get issueCustomFieldOptionsApps =>
      (super.noSuchMethod(
            Invocation.getter(#issueCustomFieldOptionsApps),
            returnValue: _FakeIssueCustomFieldOptionsAppsApi_26(
              this,
              Invocation.getter(#issueCustomFieldOptionsApps),
            ),
          )
          as _i3.IssueCustomFieldOptionsAppsApi);

  @override
  _i3.IssueCustomFieldValuesAppsApi get issueCustomFieldValuesApps =>
      (super.noSuchMethod(
            Invocation.getter(#issueCustomFieldValuesApps),
            returnValue: _FakeIssueCustomFieldValuesAppsApi_27(
              this,
              Invocation.getter(#issueCustomFieldValuesApps),
            ),
          )
          as _i3.IssueCustomFieldValuesAppsApi);

  @override
  _i3.IssueFieldConfigurationsApi get issueFieldConfigurations =>
      (super.noSuchMethod(
            Invocation.getter(#issueFieldConfigurations),
            returnValue: _FakeIssueFieldConfigurationsApi_28(
              this,
              Invocation.getter(#issueFieldConfigurations),
            ),
          )
          as _i3.IssueFieldConfigurationsApi);

  @override
  _i3.IssueFieldsApi get issueFields =>
      (super.noSuchMethod(
            Invocation.getter(#issueFields),
            returnValue: _FakeIssueFieldsApi_29(
              this,
              Invocation.getter(#issueFields),
            ),
          )
          as _i3.IssueFieldsApi);

  @override
  _i3.IssueLinkTypesApi get issueLinkTypes =>
      (super.noSuchMethod(
            Invocation.getter(#issueLinkTypes),
            returnValue: _FakeIssueLinkTypesApi_30(
              this,
              Invocation.getter(#issueLinkTypes),
            ),
          )
          as _i3.IssueLinkTypesApi);

  @override
  _i3.IssueLinksApi get issueLinks =>
      (super.noSuchMethod(
            Invocation.getter(#issueLinks),
            returnValue: _FakeIssueLinksApi_31(
              this,
              Invocation.getter(#issueLinks),
            ),
          )
          as _i3.IssueLinksApi);

  @override
  _i3.IssueNavigatorSettingsApi get issueNavigatorSettings =>
      (super.noSuchMethod(
            Invocation.getter(#issueNavigatorSettings),
            returnValue: _FakeIssueNavigatorSettingsApi_32(
              this,
              Invocation.getter(#issueNavigatorSettings),
            ),
          )
          as _i3.IssueNavigatorSettingsApi);

  @override
  _i3.IssueNotificationSchemesApi get issueNotificationSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#issueNotificationSchemes),
            returnValue: _FakeIssueNotificationSchemesApi_33(
              this,
              Invocation.getter(#issueNotificationSchemes),
            ),
          )
          as _i3.IssueNotificationSchemesApi);

  @override
  _i3.IssuePrioritiesApi get issuePriorities =>
      (super.noSuchMethod(
            Invocation.getter(#issuePriorities),
            returnValue: _FakeIssuePrioritiesApi_34(
              this,
              Invocation.getter(#issuePriorities),
            ),
          )
          as _i3.IssuePrioritiesApi);

  @override
  _i3.IssuePropertiesApi get issueProperties =>
      (super.noSuchMethod(
            Invocation.getter(#issueProperties),
            returnValue: _FakeIssuePropertiesApi_35(
              this,
              Invocation.getter(#issueProperties),
            ),
          )
          as _i3.IssuePropertiesApi);

  @override
  _i3.IssueRemoteLinksApi get issueRemoteLinks =>
      (super.noSuchMethod(
            Invocation.getter(#issueRemoteLinks),
            returnValue: _FakeIssueRemoteLinksApi_36(
              this,
              Invocation.getter(#issueRemoteLinks),
            ),
          )
          as _i3.IssueRemoteLinksApi);

  @override
  _i3.IssueResolutionsApi get issueResolutions =>
      (super.noSuchMethod(
            Invocation.getter(#issueResolutions),
            returnValue: _FakeIssueResolutionsApi_37(
              this,
              Invocation.getter(#issueResolutions),
            ),
          )
          as _i3.IssueResolutionsApi);

  @override
  _i3.IssueSearchApi get issueSearch =>
      (super.noSuchMethod(
            Invocation.getter(#issueSearch),
            returnValue: _FakeIssueSearchApi_38(
              this,
              Invocation.getter(#issueSearch),
            ),
          )
          as _i3.IssueSearchApi);

  @override
  _i3.IssueSecurityLevelApi get issueSecurityLevel =>
      (super.noSuchMethod(
            Invocation.getter(#issueSecurityLevel),
            returnValue: _FakeIssueSecurityLevelApi_39(
              this,
              Invocation.getter(#issueSecurityLevel),
            ),
          )
          as _i3.IssueSecurityLevelApi);

  @override
  _i3.IssueSecuritySchemesApi get issueSecuritySchemes =>
      (super.noSuchMethod(
            Invocation.getter(#issueSecuritySchemes),
            returnValue: _FakeIssueSecuritySchemesApi_40(
              this,
              Invocation.getter(#issueSecuritySchemes),
            ),
          )
          as _i3.IssueSecuritySchemesApi);

  @override
  _i3.IssueTypePropertiesApi get issueTypeProperties =>
      (super.noSuchMethod(
            Invocation.getter(#issueTypeProperties),
            returnValue: _FakeIssueTypePropertiesApi_41(
              this,
              Invocation.getter(#issueTypeProperties),
            ),
          )
          as _i3.IssueTypePropertiesApi);

  @override
  _i3.IssueTypeSchemesApi get issueTypeSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#issueTypeSchemes),
            returnValue: _FakeIssueTypeSchemesApi_42(
              this,
              Invocation.getter(#issueTypeSchemes),
            ),
          )
          as _i3.IssueTypeSchemesApi);

  @override
  _i3.IssueTypeScreenSchemesApi get issueTypeScreenSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#issueTypeScreenSchemes),
            returnValue: _FakeIssueTypeScreenSchemesApi_43(
              this,
              Invocation.getter(#issueTypeScreenSchemes),
            ),
          )
          as _i3.IssueTypeScreenSchemesApi);

  @override
  _i3.IssueTypesApi get issueTypes =>
      (super.noSuchMethod(
            Invocation.getter(#issueTypes),
            returnValue: _FakeIssueTypesApi_44(
              this,
              Invocation.getter(#issueTypes),
            ),
          )
          as _i3.IssueTypesApi);

  @override
  _i3.IssueVotesApi get issueVotes =>
      (super.noSuchMethod(
            Invocation.getter(#issueVotes),
            returnValue: _FakeIssueVotesApi_45(
              this,
              Invocation.getter(#issueVotes),
            ),
          )
          as _i3.IssueVotesApi);

  @override
  _i3.IssueWatchersApi get issueWatchers =>
      (super.noSuchMethod(
            Invocation.getter(#issueWatchers),
            returnValue: _FakeIssueWatchersApi_46(
              this,
              Invocation.getter(#issueWatchers),
            ),
          )
          as _i3.IssueWatchersApi);

  @override
  _i3.IssueWorklogPropertiesApi get issueWorklogProperties =>
      (super.noSuchMethod(
            Invocation.getter(#issueWorklogProperties),
            returnValue: _FakeIssueWorklogPropertiesApi_47(
              this,
              Invocation.getter(#issueWorklogProperties),
            ),
          )
          as _i3.IssueWorklogPropertiesApi);

  @override
  _i3.IssueWorklogsApi get issueWorklogs =>
      (super.noSuchMethod(
            Invocation.getter(#issueWorklogs),
            returnValue: _FakeIssueWorklogsApi_48(
              this,
              Invocation.getter(#issueWorklogs),
            ),
          )
          as _i3.IssueWorklogsApi);

  @override
  _i3.IssuesApi get issues =>
      (super.noSuchMethod(
            Invocation.getter(#issues),
            returnValue: _FakeIssuesApi_49(this, Invocation.getter(#issues)),
          )
          as _i3.IssuesApi);

  @override
  _i3.JQLApi get jql =>
      (super.noSuchMethod(
            Invocation.getter(#jql),
            returnValue: _FakeJQLApi_50(this, Invocation.getter(#jql)),
          )
          as _i3.JQLApi);

  @override
  _i3.JQLFunctionsAppsApi get jqlFunctionsApps =>
      (super.noSuchMethod(
            Invocation.getter(#jqlFunctionsApps),
            returnValue: _FakeJQLFunctionsAppsApi_51(
              this,
              Invocation.getter(#jqlFunctionsApps),
            ),
          )
          as _i3.JQLFunctionsAppsApi);

  @override
  _i3.JiraExpressionsApi get jiraExpressions =>
      (super.noSuchMethod(
            Invocation.getter(#jiraExpressions),
            returnValue: _FakeJiraExpressionsApi_52(
              this,
              Invocation.getter(#jiraExpressions),
            ),
          )
          as _i3.JiraExpressionsApi);

  @override
  _i3.JiraSettingsApi get jiraSettings =>
      (super.noSuchMethod(
            Invocation.getter(#jiraSettings),
            returnValue: _FakeJiraSettingsApi_53(
              this,
              Invocation.getter(#jiraSettings),
            ),
          )
          as _i3.JiraSettingsApi);

  @override
  _i3.LabelsApi get labels =>
      (super.noSuchMethod(
            Invocation.getter(#labels),
            returnValue: _FakeLabelsApi_54(this, Invocation.getter(#labels)),
          )
          as _i3.LabelsApi);

  @override
  _i3.LicenseMetricsApi get licenseMetrics =>
      (super.noSuchMethod(
            Invocation.getter(#licenseMetrics),
            returnValue: _FakeLicenseMetricsApi_55(
              this,
              Invocation.getter(#licenseMetrics),
            ),
          )
          as _i3.LicenseMetricsApi);

  @override
  _i3.MyselfApi get myself =>
      (super.noSuchMethod(
            Invocation.getter(#myself),
            returnValue: _FakeMyselfApi_56(this, Invocation.getter(#myself)),
          )
          as _i3.MyselfApi);

  @override
  _i3.PermissionSchemesApi get permissionSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#permissionSchemes),
            returnValue: _FakePermissionSchemesApi_57(
              this,
              Invocation.getter(#permissionSchemes),
            ),
          )
          as _i3.PermissionSchemesApi);

  @override
  _i3.PermissionsApi get permissions =>
      (super.noSuchMethod(
            Invocation.getter(#permissions),
            returnValue: _FakePermissionsApi_58(
              this,
              Invocation.getter(#permissions),
            ),
          )
          as _i3.PermissionsApi);

  @override
  _i3.ProjectAvatarsApi get projectAvatars =>
      (super.noSuchMethod(
            Invocation.getter(#projectAvatars),
            returnValue: _FakeProjectAvatarsApi_59(
              this,
              Invocation.getter(#projectAvatars),
            ),
          )
          as _i3.ProjectAvatarsApi);

  @override
  _i3.ProjectCategoriesApi get projectCategories =>
      (super.noSuchMethod(
            Invocation.getter(#projectCategories),
            returnValue: _FakeProjectCategoriesApi_60(
              this,
              Invocation.getter(#projectCategories),
            ),
          )
          as _i3.ProjectCategoriesApi);

  @override
  _i3.ProjectComponentsApi get projectComponents =>
      (super.noSuchMethod(
            Invocation.getter(#projectComponents),
            returnValue: _FakeProjectComponentsApi_61(
              this,
              Invocation.getter(#projectComponents),
            ),
          )
          as _i3.ProjectComponentsApi);

  @override
  _i3.ProjectEmailApi get projectEmail =>
      (super.noSuchMethod(
            Invocation.getter(#projectEmail),
            returnValue: _FakeProjectEmailApi_62(
              this,
              Invocation.getter(#projectEmail),
            ),
          )
          as _i3.ProjectEmailApi);

  @override
  _i3.ProjectFeaturesApi get projectFeatures =>
      (super.noSuchMethod(
            Invocation.getter(#projectFeatures),
            returnValue: _FakeProjectFeaturesApi_63(
              this,
              Invocation.getter(#projectFeatures),
            ),
          )
          as _i3.ProjectFeaturesApi);

  @override
  _i3.ProjectKeyAndNameValidationApi get projectKeyAndNameValidation =>
      (super.noSuchMethod(
            Invocation.getter(#projectKeyAndNameValidation),
            returnValue: _FakeProjectKeyAndNameValidationApi_64(
              this,
              Invocation.getter(#projectKeyAndNameValidation),
            ),
          )
          as _i3.ProjectKeyAndNameValidationApi);

  @override
  _i3.ProjectPermissionSchemesApi get projectPermissionSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#projectPermissionSchemes),
            returnValue: _FakeProjectPermissionSchemesApi_65(
              this,
              Invocation.getter(#projectPermissionSchemes),
            ),
          )
          as _i3.ProjectPermissionSchemesApi);

  @override
  _i3.ProjectPropertiesApi get projectProperties =>
      (super.noSuchMethod(
            Invocation.getter(#projectProperties),
            returnValue: _FakeProjectPropertiesApi_66(
              this,
              Invocation.getter(#projectProperties),
            ),
          )
          as _i3.ProjectPropertiesApi);

  @override
  _i3.ProjectRoleActorsApi get projectRoleActors =>
      (super.noSuchMethod(
            Invocation.getter(#projectRoleActors),
            returnValue: _FakeProjectRoleActorsApi_67(
              this,
              Invocation.getter(#projectRoleActors),
            ),
          )
          as _i3.ProjectRoleActorsApi);

  @override
  _i3.ProjectRolesApi get projectRoles =>
      (super.noSuchMethod(
            Invocation.getter(#projectRoles),
            returnValue: _FakeProjectRolesApi_68(
              this,
              Invocation.getter(#projectRoles),
            ),
          )
          as _i3.ProjectRolesApi);

  @override
  _i3.ProjectTypesApi get projectTypes =>
      (super.noSuchMethod(
            Invocation.getter(#projectTypes),
            returnValue: _FakeProjectTypesApi_69(
              this,
              Invocation.getter(#projectTypes),
            ),
          )
          as _i3.ProjectTypesApi);

  @override
  _i3.ProjectVersionsApi get projectVersions =>
      (super.noSuchMethod(
            Invocation.getter(#projectVersions),
            returnValue: _FakeProjectVersionsApi_70(
              this,
              Invocation.getter(#projectVersions),
            ),
          )
          as _i3.ProjectVersionsApi);

  @override
  _i3.ProjectsApi get projects =>
      (super.noSuchMethod(
            Invocation.getter(#projects),
            returnValue: _FakeProjectsApi_71(
              this,
              Invocation.getter(#projects),
            ),
          )
          as _i3.ProjectsApi);

  @override
  _i3.ScreenSchemesApi get screenSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#screenSchemes),
            returnValue: _FakeScreenSchemesApi_72(
              this,
              Invocation.getter(#screenSchemes),
            ),
          )
          as _i3.ScreenSchemesApi);

  @override
  _i3.ScreenTabFieldsApi get screenTabFields =>
      (super.noSuchMethod(
            Invocation.getter(#screenTabFields),
            returnValue: _FakeScreenTabFieldsApi_73(
              this,
              Invocation.getter(#screenTabFields),
            ),
          )
          as _i3.ScreenTabFieldsApi);

  @override
  _i3.ScreenTabsApi get screenTabs =>
      (super.noSuchMethod(
            Invocation.getter(#screenTabs),
            returnValue: _FakeScreenTabsApi_74(
              this,
              Invocation.getter(#screenTabs),
            ),
          )
          as _i3.ScreenTabsApi);

  @override
  _i3.ScreensApi get screens =>
      (super.noSuchMethod(
            Invocation.getter(#screens),
            returnValue: _FakeScreensApi_75(this, Invocation.getter(#screens)),
          )
          as _i3.ScreensApi);

  @override
  _i3.ServerInfoApi get serverInfo =>
      (super.noSuchMethod(
            Invocation.getter(#serverInfo),
            returnValue: _FakeServerInfoApi_76(
              this,
              Invocation.getter(#serverInfo),
            ),
          )
          as _i3.ServerInfoApi);

  @override
  _i3.StatusApi get status =>
      (super.noSuchMethod(
            Invocation.getter(#status),
            returnValue: _FakeStatusApi_77(this, Invocation.getter(#status)),
          )
          as _i3.StatusApi);

  @override
  _i3.TasksApi get tasks =>
      (super.noSuchMethod(
            Invocation.getter(#tasks),
            returnValue: _FakeTasksApi_78(this, Invocation.getter(#tasks)),
          )
          as _i3.TasksApi);

  @override
  _i3.TimeTrackingApi get timeTracking =>
      (super.noSuchMethod(
            Invocation.getter(#timeTracking),
            returnValue: _FakeTimeTrackingApi_79(
              this,
              Invocation.getter(#timeTracking),
            ),
          )
          as _i3.TimeTrackingApi);

  @override
  _i3.UIModificationsAppsApi get uiModificationsApps =>
      (super.noSuchMethod(
            Invocation.getter(#uiModificationsApps),
            returnValue: _FakeUIModificationsAppsApi_80(
              this,
              Invocation.getter(#uiModificationsApps),
            ),
          )
          as _i3.UIModificationsAppsApi);

  @override
  _i3.UserPropertiesApi get userProperties =>
      (super.noSuchMethod(
            Invocation.getter(#userProperties),
            returnValue: _FakeUserPropertiesApi_81(
              this,
              Invocation.getter(#userProperties),
            ),
          )
          as _i3.UserPropertiesApi);

  @override
  _i3.UserSearchApi get userSearch =>
      (super.noSuchMethod(
            Invocation.getter(#userSearch),
            returnValue: _FakeUserSearchApi_82(
              this,
              Invocation.getter(#userSearch),
            ),
          )
          as _i3.UserSearchApi);

  @override
  _i3.UsersApi get users =>
      (super.noSuchMethod(
            Invocation.getter(#users),
            returnValue: _FakeUsersApi_83(this, Invocation.getter(#users)),
          )
          as _i3.UsersApi);

  @override
  _i3.WebhooksApi get webhooks =>
      (super.noSuchMethod(
            Invocation.getter(#webhooks),
            returnValue: _FakeWebhooksApi_84(
              this,
              Invocation.getter(#webhooks),
            ),
          )
          as _i3.WebhooksApi);

  @override
  _i3.WorkflowSchemeDraftsApi get workflowSchemeDrafts =>
      (super.noSuchMethod(
            Invocation.getter(#workflowSchemeDrafts),
            returnValue: _FakeWorkflowSchemeDraftsApi_85(
              this,
              Invocation.getter(#workflowSchemeDrafts),
            ),
          )
          as _i3.WorkflowSchemeDraftsApi);

  @override
  _i3.WorkflowSchemeProjectAssociationsApi
  get workflowSchemeProjectAssociations =>
      (super.noSuchMethod(
            Invocation.getter(#workflowSchemeProjectAssociations),
            returnValue: _FakeWorkflowSchemeProjectAssociationsApi_86(
              this,
              Invocation.getter(#workflowSchemeProjectAssociations),
            ),
          )
          as _i3.WorkflowSchemeProjectAssociationsApi);

  @override
  _i3.WorkflowSchemesApi get workflowSchemes =>
      (super.noSuchMethod(
            Invocation.getter(#workflowSchemes),
            returnValue: _FakeWorkflowSchemesApi_87(
              this,
              Invocation.getter(#workflowSchemes),
            ),
          )
          as _i3.WorkflowSchemesApi);

  @override
  _i3.WorkflowStatusCategoriesApi get workflowStatusCategories =>
      (super.noSuchMethod(
            Invocation.getter(#workflowStatusCategories),
            returnValue: _FakeWorkflowStatusCategoriesApi_88(
              this,
              Invocation.getter(#workflowStatusCategories),
            ),
          )
          as _i3.WorkflowStatusCategoriesApi);

  @override
  _i3.WorkflowStatusesApi get workflowStatuses =>
      (super.noSuchMethod(
            Invocation.getter(#workflowStatuses),
            returnValue: _FakeWorkflowStatusesApi_89(
              this,
              Invocation.getter(#workflowStatuses),
            ),
          )
          as _i3.WorkflowStatusesApi);

  @override
  _i3.WorkflowTransitionPropertiesApi get workflowTransitionProperties =>
      (super.noSuchMethod(
            Invocation.getter(#workflowTransitionProperties),
            returnValue: _FakeWorkflowTransitionPropertiesApi_90(
              this,
              Invocation.getter(#workflowTransitionProperties),
            ),
          )
          as _i3.WorkflowTransitionPropertiesApi);

  @override
  _i3.WorkflowTransitionRulesApi get workflowTransitionRules =>
      (super.noSuchMethod(
            Invocation.getter(#workflowTransitionRules),
            returnValue: _FakeWorkflowTransitionRulesApi_91(
              this,
              Invocation.getter(#workflowTransitionRules),
            ),
          )
          as _i3.WorkflowTransitionRulesApi);

  @override
  _i3.WorkflowsApi get workflows =>
      (super.noSuchMethod(
            Invocation.getter(#workflows),
            returnValue: _FakeWorkflowsApi_92(
              this,
              Invocation.getter(#workflows),
            ),
          )
          as _i3.WorkflowsApi);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [IssueSearchApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockIssueSearchApi extends _i1.Mock implements _i3.IssueSearchApi {
  MockIssueSearchApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.IssuePickerSuggestions> getIssuePickerResource({
    String? query,
    String? currentJql,
    String? currentIssueKey,
    String? currentProjectId,
    bool? showSubTasks,
    bool? showSubTaskParent,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getIssuePickerResource, [], {
              #query: query,
              #currentJql: currentJql,
              #currentIssueKey: currentIssueKey,
              #currentProjectId: currentProjectId,
              #showSubTasks: showSubTasks,
              #showSubTaskParent: showSubTaskParent,
            }),
            returnValue: _i5.Future<_i3.IssuePickerSuggestions>.value(
              _FakeIssuePickerSuggestions_93(
                this,
                Invocation.method(#getIssuePickerResource, [], {
                  #query: query,
                  #currentJql: currentJql,
                  #currentIssueKey: currentIssueKey,
                  #currentProjectId: currentProjectId,
                  #showSubTasks: showSubTasks,
                  #showSubTaskParent: showSubTaskParent,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.IssuePickerSuggestions>);

  @override
  _i5.Future<_i3.IssueMatches> matchIssues({
    required _i3.IssuesAndJQLQueries? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#matchIssues, [], {#body: body}),
            returnValue: _i5.Future<_i3.IssueMatches>.value(
              _FakeIssueMatches_94(
                this,
                Invocation.method(#matchIssues, [], {#body: body}),
              ),
            ),
          )
          as _i5.Future<_i3.IssueMatches>);

  @override
  _i5.Future<_i3.SearchResults> searchForIssuesUsingJql({
    String? jql,
    int? startAt,
    int? maxResults,
    String? validateQuery,
    List<String>? fields,
    String? expand,
    List<String>? properties,
    bool? fieldsByKeys,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchForIssuesUsingJql, [], {
              #jql: jql,
              #startAt: startAt,
              #maxResults: maxResults,
              #validateQuery: validateQuery,
              #fields: fields,
              #expand: expand,
              #properties: properties,
              #fieldsByKeys: fieldsByKeys,
            }),
            returnValue: _i5.Future<_i3.SearchResults>.value(
              _FakeSearchResults_95(
                this,
                Invocation.method(#searchForIssuesUsingJql, [], {
                  #jql: jql,
                  #startAt: startAt,
                  #maxResults: maxResults,
                  #validateQuery: validateQuery,
                  #fields: fields,
                  #expand: expand,
                  #properties: properties,
                  #fieldsByKeys: fieldsByKeys,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.SearchResults>);

  @override
  _i5.Future<_i3.SearchResults> searchForIssuesUsingJqlPost({
    required _i3.SearchRequestBean? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchForIssuesUsingJqlPost, [], {#body: body}),
            returnValue: _i5.Future<_i3.SearchResults>.value(
              _FakeSearchResults_95(
                this,
                Invocation.method(#searchForIssuesUsingJqlPost, [], {
                  #body: body,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.SearchResults>);
}

/// A class which mocks [MyselfApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyselfApi extends _i1.Mock implements _i3.MyselfApi {
  MockMyselfApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String> getPreference(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getPreference, [key]),
            returnValue: _i5.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#getPreference, [key]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<dynamic> setPreference({
    required String? key,
    required String? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setPreference, [], {#key: key, #body: body}),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<void> removePreference(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#removePreference, [key]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.Locale> getLocale() =>
      (super.noSuchMethod(
            Invocation.method(#getLocale, []),
            returnValue: _i5.Future<_i3.Locale>.value(
              _FakeLocale_96(this, Invocation.method(#getLocale, [])),
            ),
          )
          as _i5.Future<_i3.Locale>);

  @override
  _i5.Future<dynamic> setLocale({required _i3.Locale? body}) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [], {#body: body}),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> deleteLocale() =>
      (super.noSuchMethod(
            Invocation.method(#deleteLocale, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<_i3.User> getCurrentUser({String? expand}) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, [], {#expand: expand}),
            returnValue: _i5.Future<_i3.User>.value(
              _FakeUser_97(
                this,
                Invocation.method(#getCurrentUser, [], {#expand: expand}),
              ),
            ),
          )
          as _i5.Future<_i3.User>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i3.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get active =>
      (super.noSuchMethod(Invocation.getter(#active), returnValue: false)
          as bool);

  @override
  Map<String, Object?> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, Object?>{},
          )
          as Map<String, Object?>);

  @override
  _i3.User copyWith({
    String? accountId,
    _i3.UserAccountType? accountType,
    bool? active,
    _i3.SimpleListWrapperApplicationRole? applicationRoles,
    _i3.AvatarUrlsBean? avatarUrls,
    String? displayName,
    String? emailAddress,
    String? expand,
    _i3.SimpleListWrapperGroupName? groups,
    String? key,
    String? locale,
    String? name,
    String? self,
    String? timeZone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #accountId: accountId,
              #accountType: accountType,
              #active: active,
              #applicationRoles: applicationRoles,
              #avatarUrls: avatarUrls,
              #displayName: displayName,
              #emailAddress: emailAddress,
              #expand: expand,
              #groups: groups,
              #key: key,
              #locale: locale,
              #name: name,
              #self: self,
              #timeZone: timeZone,
            }),
            returnValue: _FakeUser_97(
              this,
              Invocation.method(#copyWith, [], {
                #accountId: accountId,
                #accountType: accountType,
                #active: active,
                #applicationRoles: applicationRoles,
                #avatarUrls: avatarUrls,
                #displayName: displayName,
                #emailAddress: emailAddress,
                #expand: expand,
                #groups: groups,
                #key: key,
                #locale: locale,
                #name: name,
                #self: self,
                #timeZone: timeZone,
              }),
            ),
          )
          as _i3.User);
}

/// A class which mocks [SearchResults].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchResults extends _i1.Mock implements _i3.SearchResults {
  MockSearchResults() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.IssueBean> get issues =>
      (super.noSuchMethod(
            Invocation.getter(#issues),
            returnValue: <_i3.IssueBean>[],
          )
          as List<_i3.IssueBean>);

  @override
  List<String> get warningMessages =>
      (super.noSuchMethod(
            Invocation.getter(#warningMessages),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  Map<String, Object?> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, Object?>{},
          )
          as Map<String, Object?>);

  @override
  _i3.SearchResults copyWith({
    String? expand,
    List<_i3.IssueBean>? issues,
    int? maxResults,
    Map<String, dynamic>? names,
    Map<String, dynamic>? schema,
    int? startAt,
    int? total,
    List<String>? warningMessages,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #expand: expand,
              #issues: issues,
              #maxResults: maxResults,
              #names: names,
              #schema: schema,
              #startAt: startAt,
              #total: total,
              #warningMessages: warningMessages,
            }),
            returnValue: _FakeSearchResults_95(
              this,
              Invocation.method(#copyWith, [], {
                #expand: expand,
                #issues: issues,
                #maxResults: maxResults,
                #names: names,
                #schema: schema,
                #startAt: startAt,
                #total: total,
                #warningMessages: warningMessages,
              }),
            ),
          )
          as _i3.SearchResults);
}

/// A class which mocks [IssueBean].
///
/// See the documentation for Mockito's code generation for more information.
class MockIssueBean extends _i1.Mock implements _i3.IssueBean {
  MockIssueBean() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.IssueTransition> get transitions =>
      (super.noSuchMethod(
            Invocation.getter(#transitions),
            returnValue: <_i3.IssueTransition>[],
          )
          as List<_i3.IssueTransition>);

  @override
  Map<String, Object?> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, Object?>{},
          )
          as Map<String, Object?>);

  @override
  _i3.IssueBean copyWith({
    _i3.PageOfChangelogs? changelog,
    _i3.IssueUpdateMetadata? editmeta,
    String? expand,
    Map<String, dynamic>? fields,
    _i3.IncludedFields? fieldsToInclude,
    String? id,
    String? key,
    Map<String, dynamic>? names,
    _i3.Operations? operations,
    Map<String, dynamic>? properties,
    Map<String, dynamic>? renderedFields,
    Map<String, dynamic>? schema,
    String? self,
    List<_i3.IssueTransition>? transitions,
    Map<String, dynamic>? versionedRepresentations,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #changelog: changelog,
              #editmeta: editmeta,
              #expand: expand,
              #fields: fields,
              #fieldsToInclude: fieldsToInclude,
              #id: id,
              #key: key,
              #names: names,
              #operations: operations,
              #properties: properties,
              #renderedFields: renderedFields,
              #schema: schema,
              #self: self,
              #transitions: transitions,
              #versionedRepresentations: versionedRepresentations,
            }),
            returnValue: _FakeIssueBean_98(
              this,
              Invocation.method(#copyWith, [], {
                #changelog: changelog,
                #editmeta: editmeta,
                #expand: expand,
                #fields: fields,
                #fieldsToInclude: fieldsToInclude,
                #id: id,
                #key: key,
                #names: names,
                #operations: operations,
                #properties: properties,
                #renderedFields: renderedFields,
                #schema: schema,
                #self: self,
                #transitions: transitions,
                #versionedRepresentations: versionedRepresentations,
              }),
            ),
          )
          as _i3.IssueBean);
}
